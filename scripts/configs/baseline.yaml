defaults:
  - model: dqn
  - environment: BaseEnvironment
  - writer: cometml
  - rl_agent: BasicDQNAgent
  - replayBuffer: BaseReplayBuffer
  - _self_
optimizer:
  _target_: torch.optim.RMSprop
  lr: 3e-4
#lr_scheduler:
#  _target_: torch.optim.lr_scheduler.StepLR
#  gamma: 0.9
#  step_size: ${trainer.epoch_len}
#loss_function:
#  _target_: src.loss.ExampleLoss
trainer:
  batch_size: 199
  gamma: 0.999
  eps_start: 0.9
  eps_end: 0.05
  eps_decay: 200
  target_update: 10
  buffer_size: 10000
#  log_step: 50
#  n_epochs: 100
#  epoch_len: 500
#  device_tensors: ["data_object", "labels"] # which tensors should be on device (ex. GPU)
#  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
#  monitor: "max test_MulticlassAccuracy" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
#  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
#  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 1